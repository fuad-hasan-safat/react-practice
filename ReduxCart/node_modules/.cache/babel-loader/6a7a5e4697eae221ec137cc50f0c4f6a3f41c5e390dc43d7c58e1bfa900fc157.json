{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useEffect } from 'react';\nimport { uiActions } from './store/ui-slice';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending Cart Data'\n      }));\n      const response = await fetch('https://redux-backend-9a30c-default-rtdb.firebaseio.com/cart.json', {\n        method: 'Put',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending Cart Data Failed');\n      }\n      dispatch(uiActions.showNotification({\n        status: 'sucess',\n        title: 'Sucess...',\n        message: 'Sending Cart Data Sucesfully'\n      }));\n      sendCartData().catch(error => {\n        dispatch(uiActions.showNotification({\n          status: 'error',\n          title: 'Error...',\n          message: 'Sending Cart Data Failed!'\n        }));\n      });\n    };\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(App, \"ym533N9pcV2ZQROugfAj7yssIY8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","useDispatch","Cart","Layout","Products","useEffect","uiActions","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_s","dispatch","showCart","state","ui","cartIsVisible","cart","notification","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error","_c","$RefreshReg$"],"sources":["C:/Safat/Udemy-React-Practice/react-practice/ReduxCart/src/App.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useEffect } from 'react';\nimport { uiActions } from './store/ui-slice';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n\n  useEffect(() => {\n\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending Cart Data'\n      })\n    )\n     const response = await fetch('https://redux-backend-9a30c-default-rtdb.firebaseio.com/cart.json', {\n        method: 'Put',\n        body: JSON.stringify(cart),\n      });\n\n      if(!response.ok){\n        throw new Error('Sending Cart Data Failed');\n      }\n\n      dispatch(uiActions.showNotification({\n        status: 'sucess',\n        title: 'Sucess...',\n        message: 'Sending Cart Data Sucesfully'\n      })\n    )\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Sending Cart Data Failed!'\n      })\n    )\n    });\n    }\n\n  }, [cart]);\n  return (\n    <>\n    </>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC7D,MAAMC,IAAI,GAAGlB,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACG,IAAI,CAAC;EAC7C,MAAMC,YAAY,GAAGnB,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACG,YAAY,CAAC;EAEhEd,SAAS,CAAC,MAAM;IAEd,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/BP,QAAQ,CAACP,SAAS,CAACe,gBAAgB,CAAC;QAClCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,YAAY;QACnBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mEAAmE,EAAE;QAC/FC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAG,CAACO,QAAQ,CAACM,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MAEAnB,QAAQ,CAACP,SAAS,CAACe,gBAAgB,CAAC;QAClCC,MAAM,EAAE,QAAQ;QAChBC,KAAK,EAAE,WAAW;QAClBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;MAEDJ,YAAY,CAAC,CAAC,CAACa,KAAK,CAACC,KAAK,IAAI;QAC5BrB,QAAQ,CAACP,SAAS,CAACe,gBAAgB,CAAC;UAClCC,MAAM,EAAE,OAAO;UACfC,KAAK,EAAE,UAAU;UACjBC,OAAO,EAAE;QACX,CAAC,CACH,CAAC;MACD,CAAC,CAAC;IACF,CAAC;EAEH,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EACV,oBACER,OAAA,CAAAF,SAAA,mBACE,CAAC;AAGP;AAACI,EAAA,CAhDQD,GAAG;EAAA,QAEOV,WAAW,EACXD,WAAW,EACfA,WAAW,EACHA,WAAW;AAAA;AAAAmC,EAAA,GALzBxB,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}