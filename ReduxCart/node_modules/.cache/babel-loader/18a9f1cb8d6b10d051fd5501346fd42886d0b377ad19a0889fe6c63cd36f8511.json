{"ast":null,"code":"import { cartActions } from \"./cart-slice\";\nimport { uiActions } from \"./ui-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://redux-backend-9a30c-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Sending Cart Data Failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending Cart Data'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://redux-backend-9a30c-default-rtdb.firebaseio.com/cart/cart.json', {\n        method: 'Put',\n        body: JSON.stringify(cart)\n      });\n      console.log({\n        response\n      });\n      if (!response.ok) {\n        throw new Error('Sending Cart Data Failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Sucess...',\n        message: 'Sending Cart Data Sucesfully'\n      }));\n    } catch (error) {\n      console.log({\n        error\n      });\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Sending Cart Data Failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["cartActions","uiActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","console","log"],"sources":["C:/Safat/Udemy-React-Practice/react-practice/ReduxCart/src/store/cart-actions.js"],"sourcesContent":["import { cartActions } from \"./cart-slice\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nexport const fetchCartData = () => {\r\n    return async (dispatch) => {\r\n        const fetchData = async () => {\r\n            const response = await fetch('https://redux-backend-9a30c-default-rtdb.firebaseio.com/cart.json');\r\n            if (!response.ok) {\r\n                throw new Error('Could not fetch cart data');\r\n            }\r\n            const data = await response.json();\r\n\r\n            return data;\r\n\r\n        };\r\n\r\n        try {\r\n            const cartData = await fetchData();\r\n            dispatch(cartActions.replaceCart(cartData))\r\n        } catch (error) {\r\n            dispatch(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error...',\r\n                message: 'Sending Cart Data Failed!'\r\n            })\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport const sendCartData = (cart) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(uiActions.showNotification({\r\n            status: 'pending',\r\n            title: 'Sending...',\r\n            message: 'Sending Cart Data'\r\n        })\r\n        );\r\n\r\n        const sendRequest = async () => {\r\n            const response = await fetch('https://redux-backend-9a30c-default-rtdb.firebaseio.com/cart/cart.json', {\r\n                method: 'Put',\r\n                body: JSON.stringify(cart),\r\n            });\r\n\r\n            console.log({ response })\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Sending Cart Data Failed');\r\n            }\r\n        }\r\n\r\n\r\n        try {\r\n            await sendRequest();\r\n\r\n            dispatch(uiActions.showNotification({\r\n                status: 'success',\r\n                title: 'Sucess...',\r\n                message: 'Sending Cart Data Sucesfully'\r\n            })\r\n            );\r\n        } catch (error) {\r\n            console.log({ error });\r\n            dispatch(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error...',\r\n                message: 'Sending Cart Data Failed!'\r\n            })\r\n            );\r\n        }\r\n\r\n    }\r\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAASC,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mEAAmE,CAAC;MACjG,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAChD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,OAAOD,IAAI;IAEf,CAAC;IAED,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CAACH,WAAW,CAACY,WAAW,CAACD,QAAQ,CAAC,CAAC;IAC/C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZV,QAAQ,CAACF,SAAS,CAACa,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACb,CAAC,CACD,CAAC;IACL;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAElC,OAAO,MAAOhB,QAAQ,IAAK;IACvBA,QAAQ,CAACF,SAAS,CAACa,gBAAgB,CAAC;MAChCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACb,CAAC,CACD,CAAC;IAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,wEAAwE,EAAE;QACnGe,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MAC7B,CAAC,CAAC;MAEFM,OAAO,CAACC,GAAG,CAAC;QAAErB;MAAS,CAAC,CAAC;MAEzB,IAAI,CAACA,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC/C;IACJ,CAAC;IAGD,IAAI;MACA,MAAMY,WAAW,CAAC,CAAC;MAEnBjB,QAAQ,CAACF,SAAS,CAACa,gBAAgB,CAAC;QAChCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,WAAW;QAClBC,OAAO,EAAE;MACb,CAAC,CACD,CAAC;IACL,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZY,OAAO,CAACC,GAAG,CAAC;QAAEb;MAAM,CAAC,CAAC;MACtBV,QAAQ,CAACF,SAAS,CAACa,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACb,CAAC,CACD,CAAC;IACL;EAEJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}