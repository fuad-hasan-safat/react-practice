{"ast":null,"code":"import{cartActions}from\"./cart-slice\";import{uiActions}from\"./ui-slice\";export const fetchCartData=async()=>{return async dispatch=>{const fetchData=async()=>{const response=await fetch('https://redux-backend-9a30c-default-rtdb.firebaseio.com/cart.json');if(!response.ok){throw new Error('Could not fetch cart data');}const data=await response.json();return data;};try{const cartData=await fetchData();dispatch(cartActions.replaceCart(cartData));}catch(error){dispatch(uiActions.showNotification({status:'error',title:'Error...',message:'Sending Cart Data Failed!'}));}};};export const sendCartData=cart=>{return async dispatch=>{dispatch(uiActions.showNotification({status:'pending',title:'Sending...',message:'Sending Cart Data'}));const sendRequest=async()=>{const response=await fetch('https://redux-backend-9a30c-default-rtdb.firebaseio.com/cart/cart.json',{method:'Put',body:JSON.stringify(cart)});console.log({response});if(!response.ok){throw new Error('Sending Cart Data Failed');}};try{await sendRequest();dispatch(uiActions.showNotification({status:'success',title:'Sucess...',message:'Sending Cart Data Sucesfully'}));}catch(error){console.log({error});dispatch(uiActions.showNotification({status:'error',title:'Error...',message:'Sending Cart Data Failed!'}));}};};","map":{"version":3,"names":["cartActions","uiActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","console","log"],"sources":["C:/Safat/Udemy-React-Practice/react-practice/ReduxCart/src/store/cart-actions.js"],"sourcesContent":["import { cartActions } from \"./cart-slice\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nexport const fetchCartData = async () => {\r\n    return async (dispatch) => {\r\n        const fetchData = async () => {\r\n            const response = await fetch('https://redux-backend-9a30c-default-rtdb.firebaseio.com/cart.json');\r\n            if (!response.ok) {\r\n                throw new Error('Could not fetch cart data');\r\n            }\r\n            const data = await response.json();\r\n\r\n            return data;\r\n\r\n        };\r\n\r\n        try {\r\n            const cartData = await fetchData();\r\n            dispatch(cartActions.replaceCart(cartData))\r\n        } catch (error) {\r\n            dispatch(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error...',\r\n                message: 'Sending Cart Data Failed!'\r\n            })\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport const sendCartData = (cart) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(uiActions.showNotification({\r\n            status: 'pending',\r\n            title: 'Sending...',\r\n            message: 'Sending Cart Data'\r\n        })\r\n        );\r\n\r\n        const sendRequest = async () => {\r\n            const response = await fetch('https://redux-backend-9a30c-default-rtdb.firebaseio.com/cart/cart.json', {\r\n                method: 'Put',\r\n                body: JSON.stringify(cart),\r\n            });\r\n\r\n            console.log({ response })\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Sending Cart Data Failed');\r\n            }\r\n        }\r\n\r\n\r\n        try {\r\n            await sendRequest();\r\n\r\n            dispatch(uiActions.showNotification({\r\n                status: 'success',\r\n                title: 'Sucess...',\r\n                message: 'Sending Cart Data Sucesfully'\r\n            })\r\n            );\r\n        } catch (error) {\r\n            console.log({ error });\r\n            dispatch(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error...',\r\n                message: 'Sending Cart Data Failed!'\r\n            })\r\n            );\r\n        }\r\n\r\n    }\r\n}"],"mappings":"AAAA,OAASA,WAAW,KAAQ,cAAc,CAC1C,OAASC,SAAS,KAAQ,YAAY,CAEtC,MAAO,MAAM,CAAAC,aAAa,CAAG,KAAAA,CAAA,GAAY,CACrC,MAAO,MAAO,CAAAC,QAAQ,EAAK,CACvB,KAAM,CAAAC,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC1B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,mEAAmE,CAAC,CACjG,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,2BAA2B,CAAC,CAChD,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAElC,MAAO,CAAAD,IAAI,CAEf,CAAC,CAED,GAAI,CACA,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAP,SAAS,CAAC,CAAC,CAClCD,QAAQ,CAACH,WAAW,CAACY,WAAW,CAACD,QAAQ,CAAC,CAAC,CAC/C,CAAE,MAAOE,KAAK,CAAE,CACZV,QAAQ,CAACF,SAAS,CAACa,gBAAgB,CAAC,CAChCC,MAAM,CAAE,OAAO,CACfC,KAAK,CAAE,UAAU,CACjBC,OAAO,CAAE,2BACb,CAAC,CACD,CAAC,CACL,CACJ,CAAC,CACL,CAAC,CAED,MAAO,MAAM,CAAAC,YAAY,CAAIC,IAAI,EAAK,CAElC,MAAO,MAAO,CAAAhB,QAAQ,EAAK,CACvBA,QAAQ,CAACF,SAAS,CAACa,gBAAgB,CAAC,CAChCC,MAAM,CAAE,SAAS,CACjBC,KAAK,CAAE,YAAY,CACnBC,OAAO,CAAE,mBACb,CAAC,CACD,CAAC,CAED,KAAM,CAAAG,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC5B,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,wEAAwE,CAAE,CACnGe,MAAM,CAAE,KAAK,CACbC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAC7B,CAAC,CAAC,CAEFM,OAAO,CAACC,GAAG,CAAC,CAAErB,QAAS,CAAC,CAAC,CAEzB,GAAI,CAACA,QAAQ,CAACE,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,0BAA0B,CAAC,CAC/C,CACJ,CAAC,CAGD,GAAI,CACA,KAAM,CAAAY,WAAW,CAAC,CAAC,CAEnBjB,QAAQ,CAACF,SAAS,CAACa,gBAAgB,CAAC,CAChCC,MAAM,CAAE,SAAS,CACjBC,KAAK,CAAE,WAAW,CAClBC,OAAO,CAAE,8BACb,CAAC,CACD,CAAC,CACL,CAAE,MAAOJ,KAAK,CAAE,CACZY,OAAO,CAACC,GAAG,CAAC,CAAEb,KAAM,CAAC,CAAC,CACtBV,QAAQ,CAACF,SAAS,CAACa,gBAAgB,CAAC,CAChCC,MAAM,CAAE,OAAO,CACfC,KAAK,CAAE,UAAU,CACjBC,OAAO,CAAE,2BACb,CAAC,CACD,CAAC,CACL,CAEJ,CAAC,CACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}